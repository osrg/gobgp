language: go

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo sysctl -w net.ipv6.conf.all.disable_ipv6=0; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo sysctl -w net.ipv6.conf.default.disable_ipv6=0; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo sysctl -w net.ipv6.conf.docker0.disable_ipv6=1; fi
install: test/scenario_test/ci-scripts/travis-install-script.sh
script: test/scenario_test/ci-scripts/travis-build-script.sh

env:
  global:
    - DOCKER_IMAGE=gobgp
    - FROM_IMAGE=osrg/quagga

matrix:
  allow_failures:
    - go: tip
  include:
    - go: 1.7
      before_install: true
      install: go get -t ./...
      script: go test ./...
    - go: 1.8
      before_install: true
      install: go get -t ./...
      script: go test ./...
    - go: tip
      before_install: true
      install: go get -t ./...
      script: go test ./...
    - go: 1.7
      before_install: true
      install: go get -t ./...
      script: cd gobgpd && go build
      env:
        - GOOS=windows
    - go: 1.7
      before_install: true
      install: go get -t ./...
      script: cd gobgpd && go build
      env:
        - GOOS=freebsd
    - go: 1.7
      before_install: true
      install: go get -t ./...
      script: cd gobgpd && go build
      env:
        - GOOS=darwin
    - go: 1.7
      before_install: true
      install: true
      script: test -z "$(go fmt ./...)"
    - go: 1.7
      before_install: true
      install: true
      script: test -z "$(go vet ./...)"
    - go: 1.7
      before_install: true
      install: go get ./...
      script: python test/scenario_test/ci-scripts/build_embeded_go.py docs/sources/lib.md
    - env:
        - TEST=bgp_router_test.py
      sudo: required
      services:
        - docker
    - env:
        - TEST=bgp_zebra_test.py
      sudo: required
      services:
        - docker
    - env:
        - TEST=bgp_zebra_nht_test.py FROM_IMAGE=osrg/quagga:v1.0
      sudo: required
      services:
        - docker
    - env:
        - TEST=evpn_test.py
      sudo: required
      services:
        - docker
    - env:
        - TEST=flow_spec_test.py
      sudo: required
      services:
        - docker
    - env:
        - TEST=global_policy_test.py
      sudo: required
      services:
        - docker
    - env:
        - TEST=graceful_restart_test.py
      sudo: required
      services:
        - docker
    - env:
        - TEST=ibgp_router_test.py
      sudo: required
      services:
        - docker
    - env:
        - TEST=route_reflector_test.py
      sudo: required
      services:
        - docker
    - env:
        - TEST=route_server_as2_test.py
      sudo: required
      services:
        - docker
    - env:
        - TEST=route_server_ipv4_v6_test.py
      sudo: required
      services:
        - docker
    - env:
        - TEST=route_server_malformed_test.py
      sudo: required
      services:
        - docker
    - env:
        - TEST=route_server_policy_grpc_test.py
      sudo: required
      services:
        - docker
    - env:
        - TEST=route_server_policy_test.py
      sudo: required
      services:
        - docker
    - env:
        - TEST=route_server_softreset_test.py
      sudo: required
      services:
        - docker
    - env:
        - TEST=route_server_test.py
      sudo: required
      services:
        - docker
    - env:
        - TEST=route_server_test2.py
      sudo: required
      services:
        - docker
    - env:
        - TEST=zapi_v3_test.py FROM_IMAGE=osrg/quagga:v1.0
      sudo: required
      services:
        - docker
    - env:
        - TEST=long_lived_graceful_restart_test.py
      sudo: required
      services:
        - docker
    - env:
        - TEST=vrf_neighbor_test.py
      sudo: required
      services:
        - docker
    - env:
        - TEST=vrf_neighbor_test2.py
      sudo: required
      services:
        - docker
    - env:
        - TEST=bgp_unnumbered_test.py
      sudo: required
      services:
        - docker
    - env:
        - TEST=aspath_test.py
      sudo: required
      services:
        - docker

cache:
  pip: true

go_import_path: github.com/osrg/gobgp

notifications:
 slack:
  secure: KzuC9kytzS7wTlfj4MqSg8EpqXfJRMbo59dAVTA3w587achnVCS3vhUenWuhMCiWk7+6DVWwNpwzn2+A0S6RwMFMpKAU6Ij6K9sxEOgqBGuMN8w1//w+uJTryzsnebEIhInGt2kKfqz4Wx3QQqW5gVhI+8s+c5M0iXxFtN4soVk=
