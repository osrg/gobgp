// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.29.2
// source: extcom.proto

package apipb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TwoOctetAsSpecificExtended struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsTransitive bool   `protobuf:"varint,1,opt,name=is_transitive,json=isTransitive,proto3" json:"is_transitive,omitempty"`
	SubType      uint32 `protobuf:"varint,2,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
	Asn          uint32 `protobuf:"varint,3,opt,name=asn,proto3" json:"asn,omitempty"`
	LocalAdmin   uint32 `protobuf:"varint,4,opt,name=local_admin,json=localAdmin,proto3" json:"local_admin,omitempty"`
}

func (x *TwoOctetAsSpecificExtended) Reset() {
	*x = TwoOctetAsSpecificExtended{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extcom_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TwoOctetAsSpecificExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TwoOctetAsSpecificExtended) ProtoMessage() {}

func (x *TwoOctetAsSpecificExtended) ProtoReflect() protoreflect.Message {
	mi := &file_extcom_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TwoOctetAsSpecificExtended.ProtoReflect.Descriptor instead.
func (*TwoOctetAsSpecificExtended) Descriptor() ([]byte, []int) {
	return file_extcom_proto_rawDescGZIP(), []int{0}
}

func (x *TwoOctetAsSpecificExtended) GetIsTransitive() bool {
	if x != nil {
		return x.IsTransitive
	}
	return false
}

func (x *TwoOctetAsSpecificExtended) GetSubType() uint32 {
	if x != nil {
		return x.SubType
	}
	return 0
}

func (x *TwoOctetAsSpecificExtended) GetAsn() uint32 {
	if x != nil {
		return x.Asn
	}
	return 0
}

func (x *TwoOctetAsSpecificExtended) GetLocalAdmin() uint32 {
	if x != nil {
		return x.LocalAdmin
	}
	return 0
}

type IPv4AddressSpecificExtended struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsTransitive bool   `protobuf:"varint,1,opt,name=is_transitive,json=isTransitive,proto3" json:"is_transitive,omitempty"`
	SubType      uint32 `protobuf:"varint,2,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
	Address      string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	LocalAdmin   uint32 `protobuf:"varint,4,opt,name=local_admin,json=localAdmin,proto3" json:"local_admin,omitempty"`
}

func (x *IPv4AddressSpecificExtended) Reset() {
	*x = IPv4AddressSpecificExtended{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extcom_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPv4AddressSpecificExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPv4AddressSpecificExtended) ProtoMessage() {}

func (x *IPv4AddressSpecificExtended) ProtoReflect() protoreflect.Message {
	mi := &file_extcom_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPv4AddressSpecificExtended.ProtoReflect.Descriptor instead.
func (*IPv4AddressSpecificExtended) Descriptor() ([]byte, []int) {
	return file_extcom_proto_rawDescGZIP(), []int{1}
}

func (x *IPv4AddressSpecificExtended) GetIsTransitive() bool {
	if x != nil {
		return x.IsTransitive
	}
	return false
}

func (x *IPv4AddressSpecificExtended) GetSubType() uint32 {
	if x != nil {
		return x.SubType
	}
	return 0
}

func (x *IPv4AddressSpecificExtended) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *IPv4AddressSpecificExtended) GetLocalAdmin() uint32 {
	if x != nil {
		return x.LocalAdmin
	}
	return 0
}

type FourOctetAsSpecificExtended struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsTransitive bool   `protobuf:"varint,1,opt,name=is_transitive,json=isTransitive,proto3" json:"is_transitive,omitempty"`
	SubType      uint32 `protobuf:"varint,2,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
	Asn          uint32 `protobuf:"varint,3,opt,name=asn,proto3" json:"asn,omitempty"`
	LocalAdmin   uint32 `protobuf:"varint,4,opt,name=local_admin,json=localAdmin,proto3" json:"local_admin,omitempty"`
}

func (x *FourOctetAsSpecificExtended) Reset() {
	*x = FourOctetAsSpecificExtended{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extcom_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FourOctetAsSpecificExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FourOctetAsSpecificExtended) ProtoMessage() {}

func (x *FourOctetAsSpecificExtended) ProtoReflect() protoreflect.Message {
	mi := &file_extcom_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FourOctetAsSpecificExtended.ProtoReflect.Descriptor instead.
func (*FourOctetAsSpecificExtended) Descriptor() ([]byte, []int) {
	return file_extcom_proto_rawDescGZIP(), []int{2}
}

func (x *FourOctetAsSpecificExtended) GetIsTransitive() bool {
	if x != nil {
		return x.IsTransitive
	}
	return false
}

func (x *FourOctetAsSpecificExtended) GetSubType() uint32 {
	if x != nil {
		return x.SubType
	}
	return 0
}

func (x *FourOctetAsSpecificExtended) GetAsn() uint32 {
	if x != nil {
		return x.Asn
	}
	return 0
}

func (x *FourOctetAsSpecificExtended) GetLocalAdmin() uint32 {
	if x != nil {
		return x.LocalAdmin
	}
	return 0
}

type LinkBandwidthExtended struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asn       uint32  `protobuf:"varint,1,opt,name=asn,proto3" json:"asn,omitempty"`
	Bandwidth float32 `protobuf:"fixed32,2,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
}

func (x *LinkBandwidthExtended) Reset() {
	*x = LinkBandwidthExtended{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extcom_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkBandwidthExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkBandwidthExtended) ProtoMessage() {}

func (x *LinkBandwidthExtended) ProtoReflect() protoreflect.Message {
	mi := &file_extcom_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkBandwidthExtended.ProtoReflect.Descriptor instead.
func (*LinkBandwidthExtended) Descriptor() ([]byte, []int) {
	return file_extcom_proto_rawDescGZIP(), []int{3}
}

func (x *LinkBandwidthExtended) GetAsn() uint32 {
	if x != nil {
		return x.Asn
	}
	return 0
}

func (x *LinkBandwidthExtended) GetBandwidth() float32 {
	if x != nil {
		return x.Bandwidth
	}
	return 0
}

type ValidationExtended struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State uint32 `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *ValidationExtended) Reset() {
	*x = ValidationExtended{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extcom_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidationExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationExtended) ProtoMessage() {}

func (x *ValidationExtended) ProtoReflect() protoreflect.Message {
	mi := &file_extcom_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationExtended.ProtoReflect.Descriptor instead.
func (*ValidationExtended) Descriptor() ([]byte, []int) {
	return file_extcom_proto_rawDescGZIP(), []int{4}
}

func (x *ValidationExtended) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

type ColorExtended struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color uint32 `protobuf:"varint,1,opt,name=color,proto3" json:"color,omitempty"`
}

func (x *ColorExtended) Reset() {
	*x = ColorExtended{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extcom_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColorExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColorExtended) ProtoMessage() {}

func (x *ColorExtended) ProtoReflect() protoreflect.Message {
	mi := &file_extcom_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColorExtended.ProtoReflect.Descriptor instead.
func (*ColorExtended) Descriptor() ([]byte, []int) {
	return file_extcom_proto_rawDescGZIP(), []int{5}
}

func (x *ColorExtended) GetColor() uint32 {
	if x != nil {
		return x.Color
	}
	return 0
}

type EncapExtended struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TunnelType uint32 `protobuf:"varint,1,opt,name=tunnel_type,json=tunnelType,proto3" json:"tunnel_type,omitempty"`
}

func (x *EncapExtended) Reset() {
	*x = EncapExtended{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extcom_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncapExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncapExtended) ProtoMessage() {}

func (x *EncapExtended) ProtoReflect() protoreflect.Message {
	mi := &file_extcom_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncapExtended.ProtoReflect.Descriptor instead.
func (*EncapExtended) Descriptor() ([]byte, []int) {
	return file_extcom_proto_rawDescGZIP(), []int{6}
}

func (x *EncapExtended) GetTunnelType() uint32 {
	if x != nil {
		return x.TunnelType
	}
	return 0
}

type DefaultGatewayExtended struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DefaultGatewayExtended) Reset() {
	*x = DefaultGatewayExtended{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extcom_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultGatewayExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultGatewayExtended) ProtoMessage() {}

func (x *DefaultGatewayExtended) ProtoReflect() protoreflect.Message {
	mi := &file_extcom_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultGatewayExtended.ProtoReflect.Descriptor instead.
func (*DefaultGatewayExtended) Descriptor() ([]byte, []int) {
	return file_extcom_proto_rawDescGZIP(), []int{7}
}

type OpaqueExtended struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsTransitive bool   `protobuf:"varint,1,opt,name=is_transitive,json=isTransitive,proto3" json:"is_transitive,omitempty"`
	Value        []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *OpaqueExtended) Reset() {
	*x = OpaqueExtended{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extcom_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpaqueExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpaqueExtended) ProtoMessage() {}

func (x *OpaqueExtended) ProtoReflect() protoreflect.Message {
	mi := &file_extcom_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpaqueExtended.ProtoReflect.Descriptor instead.
func (*OpaqueExtended) Descriptor() ([]byte, []int) {
	return file_extcom_proto_rawDescGZIP(), []int{8}
}

func (x *OpaqueExtended) GetIsTransitive() bool {
	if x != nil {
		return x.IsTransitive
	}
	return false
}

func (x *OpaqueExtended) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type ESILabelExtended struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSingleActive bool   `protobuf:"varint,1,opt,name=is_single_active,json=isSingleActive,proto3" json:"is_single_active,omitempty"`
	Label          uint32 `protobuf:"varint,2,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *ESILabelExtended) Reset() {
	*x = ESILabelExtended{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extcom_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ESILabelExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ESILabelExtended) ProtoMessage() {}

func (x *ESILabelExtended) ProtoReflect() protoreflect.Message {
	mi := &file_extcom_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ESILabelExtended.ProtoReflect.Descriptor instead.
func (*ESILabelExtended) Descriptor() ([]byte, []int) {
	return file_extcom_proto_rawDescGZIP(), []int{9}
}

func (x *ESILabelExtended) GetIsSingleActive() bool {
	if x != nil {
		return x.IsSingleActive
	}
	return false
}

func (x *ESILabelExtended) GetLabel() uint32 {
	if x != nil {
		return x.Label
	}
	return 0
}

type ESImportRouteTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EsImport string `protobuf:"bytes,1,opt,name=es_import,json=esImport,proto3" json:"es_import,omitempty"`
}

func (x *ESImportRouteTarget) Reset() {
	*x = ESImportRouteTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extcom_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ESImportRouteTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ESImportRouteTarget) ProtoMessage() {}

func (x *ESImportRouteTarget) ProtoReflect() protoreflect.Message {
	mi := &file_extcom_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ESImportRouteTarget.ProtoReflect.Descriptor instead.
func (*ESImportRouteTarget) Descriptor() ([]byte, []int) {
	return file_extcom_proto_rawDescGZIP(), []int{10}
}

func (x *ESImportRouteTarget) GetEsImport() string {
	if x != nil {
		return x.EsImport
	}
	return ""
}

type MacMobilityExtended struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSticky    bool   `protobuf:"varint,1,opt,name=is_sticky,json=isSticky,proto3" json:"is_sticky,omitempty"`
	SequenceNum uint32 `protobuf:"varint,2,opt,name=sequence_num,json=sequenceNum,proto3" json:"sequence_num,omitempty"`
}

func (x *MacMobilityExtended) Reset() {
	*x = MacMobilityExtended{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extcom_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MacMobilityExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MacMobilityExtended) ProtoMessage() {}

func (x *MacMobilityExtended) ProtoReflect() protoreflect.Message {
	mi := &file_extcom_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MacMobilityExtended.ProtoReflect.Descriptor instead.
func (*MacMobilityExtended) Descriptor() ([]byte, []int) {
	return file_extcom_proto_rawDescGZIP(), []int{11}
}

func (x *MacMobilityExtended) GetIsSticky() bool {
	if x != nil {
		return x.IsSticky
	}
	return false
}

func (x *MacMobilityExtended) GetSequenceNum() uint32 {
	if x != nil {
		return x.SequenceNum
	}
	return 0
}

type RouterMacExtended struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mac string `protobuf:"bytes,1,opt,name=mac,proto3" json:"mac,omitempty"`
}

func (x *RouterMacExtended) Reset() {
	*x = RouterMacExtended{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extcom_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RouterMacExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouterMacExtended) ProtoMessage() {}

func (x *RouterMacExtended) ProtoReflect() protoreflect.Message {
	mi := &file_extcom_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouterMacExtended.ProtoReflect.Descriptor instead.
func (*RouterMacExtended) Descriptor() ([]byte, []int) {
	return file_extcom_proto_rawDescGZIP(), []int{12}
}

func (x *RouterMacExtended) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

type TrafficRateExtended struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asn  uint32  `protobuf:"varint,1,opt,name=asn,proto3" json:"asn,omitempty"`
	Rate float32 `protobuf:"fixed32,2,opt,name=rate,proto3" json:"rate,omitempty"`
}

func (x *TrafficRateExtended) Reset() {
	*x = TrafficRateExtended{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extcom_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrafficRateExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficRateExtended) ProtoMessage() {}

func (x *TrafficRateExtended) ProtoReflect() protoreflect.Message {
	mi := &file_extcom_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficRateExtended.ProtoReflect.Descriptor instead.
func (*TrafficRateExtended) Descriptor() ([]byte, []int) {
	return file_extcom_proto_rawDescGZIP(), []int{13}
}

func (x *TrafficRateExtended) GetAsn() uint32 {
	if x != nil {
		return x.Asn
	}
	return 0
}

func (x *TrafficRateExtended) GetRate() float32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

type TrafficActionExtended struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Terminal bool `protobuf:"varint,1,opt,name=terminal,proto3" json:"terminal,omitempty"`
	Sample   bool `protobuf:"varint,2,opt,name=sample,proto3" json:"sample,omitempty"`
}

func (x *TrafficActionExtended) Reset() {
	*x = TrafficActionExtended{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extcom_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrafficActionExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficActionExtended) ProtoMessage() {}

func (x *TrafficActionExtended) ProtoReflect() protoreflect.Message {
	mi := &file_extcom_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficActionExtended.ProtoReflect.Descriptor instead.
func (*TrafficActionExtended) Descriptor() ([]byte, []int) {
	return file_extcom_proto_rawDescGZIP(), []int{14}
}

func (x *TrafficActionExtended) GetTerminal() bool {
	if x != nil {
		return x.Terminal
	}
	return false
}

func (x *TrafficActionExtended) GetSample() bool {
	if x != nil {
		return x.Sample
	}
	return false
}

type RedirectTwoOctetAsSpecificExtended struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asn        uint32 `protobuf:"varint,1,opt,name=asn,proto3" json:"asn,omitempty"`
	LocalAdmin uint32 `protobuf:"varint,2,opt,name=local_admin,json=localAdmin,proto3" json:"local_admin,omitempty"`
}

func (x *RedirectTwoOctetAsSpecificExtended) Reset() {
	*x = RedirectTwoOctetAsSpecificExtended{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extcom_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedirectTwoOctetAsSpecificExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedirectTwoOctetAsSpecificExtended) ProtoMessage() {}

func (x *RedirectTwoOctetAsSpecificExtended) ProtoReflect() protoreflect.Message {
	mi := &file_extcom_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedirectTwoOctetAsSpecificExtended.ProtoReflect.Descriptor instead.
func (*RedirectTwoOctetAsSpecificExtended) Descriptor() ([]byte, []int) {
	return file_extcom_proto_rawDescGZIP(), []int{15}
}

func (x *RedirectTwoOctetAsSpecificExtended) GetAsn() uint32 {
	if x != nil {
		return x.Asn
	}
	return 0
}

func (x *RedirectTwoOctetAsSpecificExtended) GetLocalAdmin() uint32 {
	if x != nil {
		return x.LocalAdmin
	}
	return 0
}

type RedirectIPv4AddressSpecificExtended struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address    string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	LocalAdmin uint32 `protobuf:"varint,2,opt,name=local_admin,json=localAdmin,proto3" json:"local_admin,omitempty"`
}

func (x *RedirectIPv4AddressSpecificExtended) Reset() {
	*x = RedirectIPv4AddressSpecificExtended{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extcom_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedirectIPv4AddressSpecificExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedirectIPv4AddressSpecificExtended) ProtoMessage() {}

func (x *RedirectIPv4AddressSpecificExtended) ProtoReflect() protoreflect.Message {
	mi := &file_extcom_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedirectIPv4AddressSpecificExtended.ProtoReflect.Descriptor instead.
func (*RedirectIPv4AddressSpecificExtended) Descriptor() ([]byte, []int) {
	return file_extcom_proto_rawDescGZIP(), []int{16}
}

func (x *RedirectIPv4AddressSpecificExtended) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *RedirectIPv4AddressSpecificExtended) GetLocalAdmin() uint32 {
	if x != nil {
		return x.LocalAdmin
	}
	return 0
}

type RedirectFourOctetAsSpecificExtended struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asn        uint32 `protobuf:"varint,1,opt,name=asn,proto3" json:"asn,omitempty"`
	LocalAdmin uint32 `protobuf:"varint,2,opt,name=local_admin,json=localAdmin,proto3" json:"local_admin,omitempty"`
}

func (x *RedirectFourOctetAsSpecificExtended) Reset() {
	*x = RedirectFourOctetAsSpecificExtended{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extcom_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedirectFourOctetAsSpecificExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedirectFourOctetAsSpecificExtended) ProtoMessage() {}

func (x *RedirectFourOctetAsSpecificExtended) ProtoReflect() protoreflect.Message {
	mi := &file_extcom_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedirectFourOctetAsSpecificExtended.ProtoReflect.Descriptor instead.
func (*RedirectFourOctetAsSpecificExtended) Descriptor() ([]byte, []int) {
	return file_extcom_proto_rawDescGZIP(), []int{17}
}

func (x *RedirectFourOctetAsSpecificExtended) GetAsn() uint32 {
	if x != nil {
		return x.Asn
	}
	return 0
}

func (x *RedirectFourOctetAsSpecificExtended) GetLocalAdmin() uint32 {
	if x != nil {
		return x.LocalAdmin
	}
	return 0
}

type TrafficRemarkExtended struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dscp uint32 `protobuf:"varint,1,opt,name=dscp,proto3" json:"dscp,omitempty"`
}

func (x *TrafficRemarkExtended) Reset() {
	*x = TrafficRemarkExtended{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extcom_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrafficRemarkExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficRemarkExtended) ProtoMessage() {}

func (x *TrafficRemarkExtended) ProtoReflect() protoreflect.Message {
	mi := &file_extcom_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficRemarkExtended.ProtoReflect.Descriptor instead.
func (*TrafficRemarkExtended) Descriptor() ([]byte, []int) {
	return file_extcom_proto_rawDescGZIP(), []int{18}
}

func (x *TrafficRemarkExtended) GetDscp() uint32 {
	if x != nil {
		return x.Dscp
	}
	return 0
}

type MUPExtended struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubType    uint32 `protobuf:"varint,1,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
	SegmentId2 uint32 `protobuf:"varint,2,opt,name=segment_id2,json=segmentId2,proto3" json:"segment_id2,omitempty"`
	SegmentId4 uint32 `protobuf:"varint,3,opt,name=segment_id4,json=segmentId4,proto3" json:"segment_id4,omitempty"`
}

func (x *MUPExtended) Reset() {
	*x = MUPExtended{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extcom_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MUPExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MUPExtended) ProtoMessage() {}

func (x *MUPExtended) ProtoReflect() protoreflect.Message {
	mi := &file_extcom_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MUPExtended.ProtoReflect.Descriptor instead.
func (*MUPExtended) Descriptor() ([]byte, []int) {
	return file_extcom_proto_rawDescGZIP(), []int{19}
}

func (x *MUPExtended) GetSubType() uint32 {
	if x != nil {
		return x.SubType
	}
	return 0
}

func (x *MUPExtended) GetSegmentId2() uint32 {
	if x != nil {
		return x.SegmentId2
	}
	return 0
}

func (x *MUPExtended) GetSegmentId4() uint32 {
	if x != nil {
		return x.SegmentId4
	}
	return 0
}

type VPLSExtended struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControlFlags uint32 `protobuf:"varint,1,opt,name=control_flags,json=controlFlags,proto3" json:"control_flags,omitempty"`
	Mtu          uint32 `protobuf:"varint,2,opt,name=mtu,proto3" json:"mtu,omitempty"`
}

func (x *VPLSExtended) Reset() {
	*x = VPLSExtended{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extcom_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VPLSExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VPLSExtended) ProtoMessage() {}

func (x *VPLSExtended) ProtoReflect() protoreflect.Message {
	mi := &file_extcom_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VPLSExtended.ProtoReflect.Descriptor instead.
func (*VPLSExtended) Descriptor() ([]byte, []int) {
	return file_extcom_proto_rawDescGZIP(), []int{20}
}

func (x *VPLSExtended) GetControlFlags() uint32 {
	if x != nil {
		return x.ControlFlags
	}
	return 0
}

func (x *VPLSExtended) GetMtu() uint32 {
	if x != nil {
		return x.Mtu
	}
	return 0
}

type UnknownExtended struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *UnknownExtended) Reset() {
	*x = UnknownExtended{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extcom_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnknownExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnknownExtended) ProtoMessage() {}

func (x *UnknownExtended) ProtoReflect() protoreflect.Message {
	mi := &file_extcom_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnknownExtended.ProtoReflect.Descriptor instead.
func (*UnknownExtended) Descriptor() ([]byte, []int) {
	return file_extcom_proto_rawDescGZIP(), []int{21}
}

func (x *UnknownExtended) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UnknownExtended) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type ExtendedCommunity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Extcom:
	//
	//	*ExtendedCommunity_Unknown
	//	*ExtendedCommunity_TwoOctetAsSpecific
	//	*ExtendedCommunity_Ipv4AddressSpecific
	//	*ExtendedCommunity_FourOctetAsSpecific
	//	*ExtendedCommunity_LinkBandwidth
	//	*ExtendedCommunity_Validation
	//	*ExtendedCommunity_Color
	//	*ExtendedCommunity_Encap
	//	*ExtendedCommunity_DefaultGateway
	//	*ExtendedCommunity_Opaque
	//	*ExtendedCommunity_EsiLabel
	//	*ExtendedCommunity_EsImport
	//	*ExtendedCommunity_MacMobility
	//	*ExtendedCommunity_RouterMac
	//	*ExtendedCommunity_TrafficRate
	//	*ExtendedCommunity_TrafficAction
	//	*ExtendedCommunity_RedirectTwoOctetAsSpecific
	//	*ExtendedCommunity_RedirectIpv4AddressSpecific
	//	*ExtendedCommunity_RedirectFourOctetAsSpecific
	//	*ExtendedCommunity_TrafficRemark
	//	*ExtendedCommunity_Mup
	//	*ExtendedCommunity_Vpls
	Extcom isExtendedCommunity_Extcom `protobuf_oneof:"extcom"`
}

func (x *ExtendedCommunity) Reset() {
	*x = ExtendedCommunity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extcom_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtendedCommunity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtendedCommunity) ProtoMessage() {}

func (x *ExtendedCommunity) ProtoReflect() protoreflect.Message {
	mi := &file_extcom_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtendedCommunity.ProtoReflect.Descriptor instead.
func (*ExtendedCommunity) Descriptor() ([]byte, []int) {
	return file_extcom_proto_rawDescGZIP(), []int{22}
}

func (m *ExtendedCommunity) GetExtcom() isExtendedCommunity_Extcom {
	if m != nil {
		return m.Extcom
	}
	return nil
}

func (x *ExtendedCommunity) GetUnknown() *UnknownExtended {
	if x, ok := x.GetExtcom().(*ExtendedCommunity_Unknown); ok {
		return x.Unknown
	}
	return nil
}

func (x *ExtendedCommunity) GetTwoOctetAsSpecific() *TwoOctetAsSpecificExtended {
	if x, ok := x.GetExtcom().(*ExtendedCommunity_TwoOctetAsSpecific); ok {
		return x.TwoOctetAsSpecific
	}
	return nil
}

func (x *ExtendedCommunity) GetIpv4AddressSpecific() *IPv4AddressSpecificExtended {
	if x, ok := x.GetExtcom().(*ExtendedCommunity_Ipv4AddressSpecific); ok {
		return x.Ipv4AddressSpecific
	}
	return nil
}

func (x *ExtendedCommunity) GetFourOctetAsSpecific() *FourOctetAsSpecificExtended {
	if x, ok := x.GetExtcom().(*ExtendedCommunity_FourOctetAsSpecific); ok {
		return x.FourOctetAsSpecific
	}
	return nil
}

func (x *ExtendedCommunity) GetLinkBandwidth() *LinkBandwidthExtended {
	if x, ok := x.GetExtcom().(*ExtendedCommunity_LinkBandwidth); ok {
		return x.LinkBandwidth
	}
	return nil
}

func (x *ExtendedCommunity) GetValidation() *ValidationExtended {
	if x, ok := x.GetExtcom().(*ExtendedCommunity_Validation); ok {
		return x.Validation
	}
	return nil
}

func (x *ExtendedCommunity) GetColor() *ColorExtended {
	if x, ok := x.GetExtcom().(*ExtendedCommunity_Color); ok {
		return x.Color
	}
	return nil
}

func (x *ExtendedCommunity) GetEncap() *EncapExtended {
	if x, ok := x.GetExtcom().(*ExtendedCommunity_Encap); ok {
		return x.Encap
	}
	return nil
}

func (x *ExtendedCommunity) GetDefaultGateway() *DefaultGatewayExtended {
	if x, ok := x.GetExtcom().(*ExtendedCommunity_DefaultGateway); ok {
		return x.DefaultGateway
	}
	return nil
}

func (x *ExtendedCommunity) GetOpaque() *OpaqueExtended {
	if x, ok := x.GetExtcom().(*ExtendedCommunity_Opaque); ok {
		return x.Opaque
	}
	return nil
}

func (x *ExtendedCommunity) GetEsiLabel() *ESILabelExtended {
	if x, ok := x.GetExtcom().(*ExtendedCommunity_EsiLabel); ok {
		return x.EsiLabel
	}
	return nil
}

func (x *ExtendedCommunity) GetEsImport() *ESImportRouteTarget {
	if x, ok := x.GetExtcom().(*ExtendedCommunity_EsImport); ok {
		return x.EsImport
	}
	return nil
}

func (x *ExtendedCommunity) GetMacMobility() *MacMobilityExtended {
	if x, ok := x.GetExtcom().(*ExtendedCommunity_MacMobility); ok {
		return x.MacMobility
	}
	return nil
}

func (x *ExtendedCommunity) GetRouterMac() *RouterMacExtended {
	if x, ok := x.GetExtcom().(*ExtendedCommunity_RouterMac); ok {
		return x.RouterMac
	}
	return nil
}

func (x *ExtendedCommunity) GetTrafficRate() *TrafficRateExtended {
	if x, ok := x.GetExtcom().(*ExtendedCommunity_TrafficRate); ok {
		return x.TrafficRate
	}
	return nil
}

func (x *ExtendedCommunity) GetTrafficAction() *TrafficActionExtended {
	if x, ok := x.GetExtcom().(*ExtendedCommunity_TrafficAction); ok {
		return x.TrafficAction
	}
	return nil
}

func (x *ExtendedCommunity) GetRedirectTwoOctetAsSpecific() *RedirectTwoOctetAsSpecificExtended {
	if x, ok := x.GetExtcom().(*ExtendedCommunity_RedirectTwoOctetAsSpecific); ok {
		return x.RedirectTwoOctetAsSpecific
	}
	return nil
}

func (x *ExtendedCommunity) GetRedirectIpv4AddressSpecific() *RedirectIPv4AddressSpecificExtended {
	if x, ok := x.GetExtcom().(*ExtendedCommunity_RedirectIpv4AddressSpecific); ok {
		return x.RedirectIpv4AddressSpecific
	}
	return nil
}

func (x *ExtendedCommunity) GetRedirectFourOctetAsSpecific() *RedirectFourOctetAsSpecificExtended {
	if x, ok := x.GetExtcom().(*ExtendedCommunity_RedirectFourOctetAsSpecific); ok {
		return x.RedirectFourOctetAsSpecific
	}
	return nil
}

func (x *ExtendedCommunity) GetTrafficRemark() *TrafficRemarkExtended {
	if x, ok := x.GetExtcom().(*ExtendedCommunity_TrafficRemark); ok {
		return x.TrafficRemark
	}
	return nil
}

func (x *ExtendedCommunity) GetMup() *MUPExtended {
	if x, ok := x.GetExtcom().(*ExtendedCommunity_Mup); ok {
		return x.Mup
	}
	return nil
}

func (x *ExtendedCommunity) GetVpls() *VPLSExtended {
	if x, ok := x.GetExtcom().(*ExtendedCommunity_Vpls); ok {
		return x.Vpls
	}
	return nil
}

type isExtendedCommunity_Extcom interface {
	isExtendedCommunity_Extcom()
}

type ExtendedCommunity_Unknown struct {
	Unknown *UnknownExtended `protobuf:"bytes,1,opt,name=unknown,proto3,oneof"`
}

type ExtendedCommunity_TwoOctetAsSpecific struct {
	TwoOctetAsSpecific *TwoOctetAsSpecificExtended `protobuf:"bytes,2,opt,name=two_octet_as_specific,json=twoOctetAsSpecific,proto3,oneof"`
}

type ExtendedCommunity_Ipv4AddressSpecific struct {
	Ipv4AddressSpecific *IPv4AddressSpecificExtended `protobuf:"bytes,3,opt,name=ipv4_address_specific,json=ipv4AddressSpecific,proto3,oneof"`
}

type ExtendedCommunity_FourOctetAsSpecific struct {
	FourOctetAsSpecific *FourOctetAsSpecificExtended `protobuf:"bytes,4,opt,name=four_octet_as_specific,json=fourOctetAsSpecific,proto3,oneof"`
}

type ExtendedCommunity_LinkBandwidth struct {
	LinkBandwidth *LinkBandwidthExtended `protobuf:"bytes,5,opt,name=link_bandwidth,json=linkBandwidth,proto3,oneof"`
}

type ExtendedCommunity_Validation struct {
	Validation *ValidationExtended `protobuf:"bytes,6,opt,name=validation,proto3,oneof"`
}

type ExtendedCommunity_Color struct {
	Color *ColorExtended `protobuf:"bytes,7,opt,name=color,proto3,oneof"`
}

type ExtendedCommunity_Encap struct {
	Encap *EncapExtended `protobuf:"bytes,8,opt,name=encap,proto3,oneof"`
}

type ExtendedCommunity_DefaultGateway struct {
	DefaultGateway *DefaultGatewayExtended `protobuf:"bytes,9,opt,name=default_gateway,json=defaultGateway,proto3,oneof"`
}

type ExtendedCommunity_Opaque struct {
	Opaque *OpaqueExtended `protobuf:"bytes,10,opt,name=opaque,proto3,oneof"`
}

type ExtendedCommunity_EsiLabel struct {
	EsiLabel *ESILabelExtended `protobuf:"bytes,11,opt,name=esi_label,json=esiLabel,proto3,oneof"`
}

type ExtendedCommunity_EsImport struct {
	EsImport *ESImportRouteTarget `protobuf:"bytes,12,opt,name=es_import,json=esImport,proto3,oneof"`
}

type ExtendedCommunity_MacMobility struct {
	MacMobility *MacMobilityExtended `protobuf:"bytes,13,opt,name=mac_mobility,json=macMobility,proto3,oneof"`
}

type ExtendedCommunity_RouterMac struct {
	RouterMac *RouterMacExtended `protobuf:"bytes,14,opt,name=router_mac,json=routerMac,proto3,oneof"`
}

type ExtendedCommunity_TrafficRate struct {
	TrafficRate *TrafficRateExtended `protobuf:"bytes,15,opt,name=traffic_rate,json=trafficRate,proto3,oneof"`
}

type ExtendedCommunity_TrafficAction struct {
	TrafficAction *TrafficActionExtended `protobuf:"bytes,16,opt,name=traffic_action,json=trafficAction,proto3,oneof"`
}

type ExtendedCommunity_RedirectTwoOctetAsSpecific struct {
	RedirectTwoOctetAsSpecific *RedirectTwoOctetAsSpecificExtended `protobuf:"bytes,17,opt,name=redirect_two_octet_as_specific,json=redirectTwoOctetAsSpecific,proto3,oneof"`
}

type ExtendedCommunity_RedirectIpv4AddressSpecific struct {
	RedirectIpv4AddressSpecific *RedirectIPv4AddressSpecificExtended `protobuf:"bytes,18,opt,name=redirect_ipv4_address_specific,json=redirectIpv4AddressSpecific,proto3,oneof"`
}

type ExtendedCommunity_RedirectFourOctetAsSpecific struct {
	RedirectFourOctetAsSpecific *RedirectFourOctetAsSpecificExtended `protobuf:"bytes,19,opt,name=redirect_four_octet_as_specific,json=redirectFourOctetAsSpecific,proto3,oneof"`
}

type ExtendedCommunity_TrafficRemark struct {
	TrafficRemark *TrafficRemarkExtended `protobuf:"bytes,20,opt,name=traffic_remark,json=trafficRemark,proto3,oneof"`
}

type ExtendedCommunity_Mup struct {
	Mup *MUPExtended `protobuf:"bytes,21,opt,name=mup,proto3,oneof"`
}

type ExtendedCommunity_Vpls struct {
	Vpls *VPLSExtended `protobuf:"bytes,22,opt,name=vpls,proto3,oneof"`
}

func (*ExtendedCommunity_Unknown) isExtendedCommunity_Extcom() {}

func (*ExtendedCommunity_TwoOctetAsSpecific) isExtendedCommunity_Extcom() {}

func (*ExtendedCommunity_Ipv4AddressSpecific) isExtendedCommunity_Extcom() {}

func (*ExtendedCommunity_FourOctetAsSpecific) isExtendedCommunity_Extcom() {}

func (*ExtendedCommunity_LinkBandwidth) isExtendedCommunity_Extcom() {}

func (*ExtendedCommunity_Validation) isExtendedCommunity_Extcom() {}

func (*ExtendedCommunity_Color) isExtendedCommunity_Extcom() {}

func (*ExtendedCommunity_Encap) isExtendedCommunity_Extcom() {}

func (*ExtendedCommunity_DefaultGateway) isExtendedCommunity_Extcom() {}

func (*ExtendedCommunity_Opaque) isExtendedCommunity_Extcom() {}

func (*ExtendedCommunity_EsiLabel) isExtendedCommunity_Extcom() {}

func (*ExtendedCommunity_EsImport) isExtendedCommunity_Extcom() {}

func (*ExtendedCommunity_MacMobility) isExtendedCommunity_Extcom() {}

func (*ExtendedCommunity_RouterMac) isExtendedCommunity_Extcom() {}

func (*ExtendedCommunity_TrafficRate) isExtendedCommunity_Extcom() {}

func (*ExtendedCommunity_TrafficAction) isExtendedCommunity_Extcom() {}

func (*ExtendedCommunity_RedirectTwoOctetAsSpecific) isExtendedCommunity_Extcom() {}

func (*ExtendedCommunity_RedirectIpv4AddressSpecific) isExtendedCommunity_Extcom() {}

func (*ExtendedCommunity_RedirectFourOctetAsSpecific) isExtendedCommunity_Extcom() {}

func (*ExtendedCommunity_TrafficRemark) isExtendedCommunity_Extcom() {}

func (*ExtendedCommunity_Mup) isExtendedCommunity_Extcom() {}

func (*ExtendedCommunity_Vpls) isExtendedCommunity_Extcom() {}

type RouteTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Rt:
	//
	//	*RouteTarget_TwoOctetAsSpecific
	//	*RouteTarget_Ipv4AddressSpecific
	//	*RouteTarget_FourOctetAsSpecific
	Rt isRouteTarget_Rt `protobuf_oneof:"rt"`
}

func (x *RouteTarget) Reset() {
	*x = RouteTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extcom_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RouteTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteTarget) ProtoMessage() {}

func (x *RouteTarget) ProtoReflect() protoreflect.Message {
	mi := &file_extcom_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteTarget.ProtoReflect.Descriptor instead.
func (*RouteTarget) Descriptor() ([]byte, []int) {
	return file_extcom_proto_rawDescGZIP(), []int{23}
}

func (m *RouteTarget) GetRt() isRouteTarget_Rt {
	if m != nil {
		return m.Rt
	}
	return nil
}

func (x *RouteTarget) GetTwoOctetAsSpecific() *TwoOctetAsSpecificExtended {
	if x, ok := x.GetRt().(*RouteTarget_TwoOctetAsSpecific); ok {
		return x.TwoOctetAsSpecific
	}
	return nil
}

func (x *RouteTarget) GetIpv4AddressSpecific() *IPv4AddressSpecificExtended {
	if x, ok := x.GetRt().(*RouteTarget_Ipv4AddressSpecific); ok {
		return x.Ipv4AddressSpecific
	}
	return nil
}

func (x *RouteTarget) GetFourOctetAsSpecific() *FourOctetAsSpecificExtended {
	if x, ok := x.GetRt().(*RouteTarget_FourOctetAsSpecific); ok {
		return x.FourOctetAsSpecific
	}
	return nil
}

type isRouteTarget_Rt interface {
	isRouteTarget_Rt()
}

type RouteTarget_TwoOctetAsSpecific struct {
	TwoOctetAsSpecific *TwoOctetAsSpecificExtended `protobuf:"bytes,1,opt,name=two_octet_as_specific,json=twoOctetAsSpecific,proto3,oneof"`
}

type RouteTarget_Ipv4AddressSpecific struct {
	Ipv4AddressSpecific *IPv4AddressSpecificExtended `protobuf:"bytes,2,opt,name=ipv4_address_specific,json=ipv4AddressSpecific,proto3,oneof"`
}

type RouteTarget_FourOctetAsSpecific struct {
	FourOctetAsSpecific *FourOctetAsSpecificExtended `protobuf:"bytes,3,opt,name=four_octet_as_specific,json=fourOctetAsSpecific,proto3,oneof"`
}

func (*RouteTarget_TwoOctetAsSpecific) isRouteTarget_Rt() {}

func (*RouteTarget_Ipv4AddressSpecific) isRouteTarget_Rt() {}

func (*RouteTarget_FourOctetAsSpecific) isRouteTarget_Rt() {}

var File_extcom_proto protoreflect.FileDescriptor

var file_extcom_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x65, 0x78, 0x74, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x61, 0x70, 0x69, 0x70, 0x62, 0x22, 0x8f, 0x01, 0x0a, 0x1a, 0x54, 0x77, 0x6f, 0x4f, 0x63, 0x74,
	0x65, 0x74, 0x41, 0x73, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x69, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x75, 0x62,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x75, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x73, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x61, 0x73, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x22, 0x98, 0x01, 0x0a, 0x1b, 0x49, 0x50, 0x76, 0x34,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x69, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x22, 0x90, 0x01, 0x0a, 0x1b, 0x46, 0x6f, 0x75, 0x72, 0x4f, 0x63, 0x74, 0x65, 0x74,
	0x41, 0x73, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x73, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x61, 0x73, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x22, 0x47, 0x0a, 0x15, 0x4c, 0x69, 0x6e, 0x6b, 0x42, 0x61, 0x6e,
	0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x61, 0x73, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x09, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x22, 0x2a,
	0x0a, 0x12, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x25, 0x0a, 0x0d, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x22, 0x30, 0x0a, 0x0d, 0x45, 0x6e, 0x63, 0x61, 0x70, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x22, 0x4b, 0x0a,
	0x0e, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x76, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x52, 0x0a, 0x10, 0x45, 0x53,
	0x49, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x28,
	0x0a, 0x10, 0x69, 0x73, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x32,
	0x0a, 0x13, 0x45, 0x53, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x73, 0x5f, 0x69, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x73, 0x49, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x22, 0x55, 0x0a, 0x13, 0x4d, 0x61, 0x63, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f,
	0x73, 0x74, 0x69, 0x63, 0x6b, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73,
	0x53, 0x74, 0x69, 0x63, 0x6b, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x25, 0x0a, 0x11, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x63,
	0x22, 0x3b, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x52, 0x61, 0x74, 0x65, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x73, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x61, 0x73, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x22, 0x4b, 0x0a,
	0x15, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x22, 0x57, 0x0a, 0x22, 0x52, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x77, 0x6f, 0x4f, 0x63, 0x74, 0x65, 0x74, 0x41, 0x73,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x61,
	0x73, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x22, 0x60, 0x0a, 0x23, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x49,
	0x50, 0x76, 0x34, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x63, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x22, 0x58, 0x0a, 0x23, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x46, 0x6f, 0x75, 0x72, 0x4f, 0x63, 0x74, 0x65, 0x74, 0x41, 0x73, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x63, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x61, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x61, 0x73, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x22,
	0x2b, 0x0a, 0x15, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x73, 0x63, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x64, 0x73, 0x63, 0x70, 0x22, 0x6a, 0x0a, 0x0b,
	0x4d, 0x55, 0x50, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x32, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x34, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x34, 0x22, 0x45, 0x0a, 0x0c, 0x56, 0x50, 0x4c, 0x53,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x74, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6d, 0x74, 0x75, 0x22,
	0x3b, 0x0a, 0x0f, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa2, 0x0c, 0x0a,
	0x11, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x12, 0x32, 0x0a, 0x07, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x48, 0x00, 0x52, 0x07, 0x75,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x12, 0x56, 0x0a, 0x15, 0x74, 0x77, 0x6f, 0x5f, 0x6f, 0x63,
	0x74, 0x65, 0x74, 0x5f, 0x61, 0x73, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x70, 0x62, 0x2e, 0x54, 0x77,
	0x6f, 0x4f, 0x63, 0x74, 0x65, 0x74, 0x41, 0x73, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x48, 0x00, 0x52, 0x12, 0x74, 0x77, 0x6f, 0x4f,
	0x63, 0x74, 0x65, 0x74, 0x41, 0x73, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x12, 0x58,
	0x0a, 0x15, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x61, 0x70, 0x69, 0x70, 0x62, 0x2e, 0x49, 0x50, 0x76, 0x34, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65,
	0x64, 0x48, 0x00, 0x52, 0x13, 0x69, 0x70, 0x76, 0x34, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x12, 0x59, 0x0a, 0x16, 0x66, 0x6f, 0x75, 0x72,
	0x5f, 0x6f, 0x63, 0x74, 0x65, 0x74, 0x5f, 0x61, 0x73, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x70, 0x62,
	0x2e, 0x46, 0x6f, 0x75, 0x72, 0x4f, 0x63, 0x74, 0x65, 0x74, 0x41, 0x73, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x63, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x48, 0x00, 0x52, 0x13,
	0x66, 0x6f, 0x75, 0x72, 0x4f, 0x63, 0x74, 0x65, 0x74, 0x41, 0x73, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x63, 0x12, 0x45, 0x0a, 0x0e, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x62, 0x61, 0x6e, 0x64,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70,
	0x69, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x6c, 0x69, 0x6e,
	0x6b, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x3b, 0x0a, 0x0a, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x61, 0x70, 0x69, 0x70, 0x62, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0a, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x48, 0x00, 0x52, 0x05,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x6e, 0x63, 0x61, 0x70, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x63,
	0x61, 0x70, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6e,
	0x63, 0x61, 0x70, 0x12, 0x48, 0x0a, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61,
	0x70, 0x69, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0e, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x2f, 0x0a,
	0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x61, 0x70, 0x69, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x12, 0x36,
	0x0a, 0x09, 0x65, 0x73, 0x69, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x70, 0x62, 0x2e, 0x45, 0x53, 0x49, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x48, 0x00, 0x52, 0x08, 0x65, 0x73,
	0x69, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x39, 0x0a, 0x09, 0x65, 0x73, 0x5f, 0x69, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x70,
	0x62, 0x2e, 0x45, 0x53, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x48, 0x00, 0x52, 0x08, 0x65, 0x73, 0x49, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x3f, 0x0a, 0x0c, 0x6d, 0x61, 0x63, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x70, 0x62, 0x2e,
	0x4d, 0x61, 0x63, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x6d, 0x61, 0x63, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x63,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x70, 0x62, 0x2e, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64,
	0x48, 0x00, 0x52, 0x09, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x12, 0x3f, 0x0a,
	0x0c, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x52, 0x61, 0x74, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x48,
	0x00, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x52, 0x61, 0x74, 0x65, 0x12, 0x45,
	0x0a, 0x0e, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x70, 0x62, 0x2e, 0x54,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6f, 0x0a, 0x1e, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x5f, 0x74, 0x77, 0x6f, 0x5f, 0x6f, 0x63, 0x74, 0x65, 0x74, 0x5f, 0x61, 0x73, 0x5f, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x61, 0x70, 0x69, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x77,
	0x6f, 0x4f, 0x63, 0x74, 0x65, 0x74, 0x41, 0x73, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x48, 0x00, 0x52, 0x1a, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x54, 0x77, 0x6f, 0x4f, 0x63, 0x74, 0x65, 0x74, 0x41, 0x73, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x12, 0x71, 0x0a, 0x1e, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x61, 0x70, 0x69, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x49,
	0x50, 0x76, 0x34, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x63, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x48, 0x00, 0x52, 0x1b, 0x72, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x49, 0x70, 0x76, 0x34, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x12, 0x72, 0x0a, 0x1f, 0x72, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x66, 0x6f, 0x75, 0x72, 0x5f, 0x6f, 0x63, 0x74, 0x65, 0x74,
	0x5f, 0x61, 0x73, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x46, 0x6f, 0x75, 0x72, 0x4f, 0x63, 0x74, 0x65, 0x74, 0x41, 0x73, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x48, 0x00,
	0x52, 0x1b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x46, 0x6f, 0x75, 0x72, 0x4f, 0x63,
	0x74, 0x65, 0x74, 0x41, 0x73, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x12, 0x45, 0x0a,
	0x0e, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x70, 0x62, 0x2e, 0x54, 0x72,
	0x61, 0x66, 0x66, 0x69, 0x63, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x52, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x12, 0x26, 0x0a, 0x03, 0x6d, 0x75, 0x70, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x70, 0x62, 0x2e, 0x4d, 0x55, 0x50, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x64, 0x65, 0x64, 0x48, 0x00, 0x52, 0x03, 0x6d, 0x75, 0x70, 0x12, 0x29, 0x0a, 0x04,
	0x76, 0x70, 0x6c, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69,
	0x70, 0x62, 0x2e, 0x56, 0x50, 0x4c, 0x53, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x48,
	0x00, 0x52, 0x04, 0x76, 0x70, 0x6c, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x65, 0x78, 0x74, 0x63, 0x6f,
	0x6d, 0x22, 0xa0, 0x02, 0x0a, 0x0b, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x12, 0x56, 0x0a, 0x15, 0x74, 0x77, 0x6f, 0x5f, 0x6f, 0x63, 0x74, 0x65, 0x74, 0x5f, 0x61,
	0x73, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x70, 0x62, 0x2e, 0x54, 0x77, 0x6f, 0x4f, 0x63, 0x74, 0x65,
	0x74, 0x41, 0x73, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x65, 0x64, 0x48, 0x00, 0x52, 0x12, 0x74, 0x77, 0x6f, 0x4f, 0x63, 0x74, 0x65, 0x74, 0x41,
	0x73, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x12, 0x58, 0x0a, 0x15, 0x69, 0x70, 0x76,
	0x34, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x70, 0x62,
	0x2e, 0x49, 0x50, 0x76, 0x34, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x63, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x48, 0x00, 0x52, 0x13,
	0x69, 0x70, 0x76, 0x34, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x63, 0x12, 0x59, 0x0a, 0x16, 0x66, 0x6f, 0x75, 0x72, 0x5f, 0x6f, 0x63, 0x74, 0x65,
	0x74, 0x5f, 0x61, 0x73, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x70, 0x62, 0x2e, 0x46, 0x6f, 0x75, 0x72,
	0x4f, 0x63, 0x74, 0x65, 0x74, 0x41, 0x73, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x48, 0x00, 0x52, 0x13, 0x66, 0x6f, 0x75, 0x72, 0x4f,
	0x63, 0x74, 0x65, 0x74, 0x41, 0x73, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x42, 0x04,
	0x0a, 0x02, 0x72, 0x74, 0x42, 0x24, 0x5a, 0x22, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6f, 0x73, 0x72, 0x67, 0x2f, 0x67, 0x6f, 0x62, 0x67, 0x70, 0x2f, 0x76, 0x33,
	0x2f, 0x61, 0x70, 0x69, 0x3b, 0x61, 0x70, 0x69, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_extcom_proto_rawDescOnce sync.Once
	file_extcom_proto_rawDescData = file_extcom_proto_rawDesc
)

func file_extcom_proto_rawDescGZIP() []byte {
	file_extcom_proto_rawDescOnce.Do(func() {
		file_extcom_proto_rawDescData = protoimpl.X.CompressGZIP(file_extcom_proto_rawDescData)
	})
	return file_extcom_proto_rawDescData
}

var file_extcom_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_extcom_proto_goTypes = []interface{}{
	(*TwoOctetAsSpecificExtended)(nil),          // 0: apipb.TwoOctetAsSpecificExtended
	(*IPv4AddressSpecificExtended)(nil),         // 1: apipb.IPv4AddressSpecificExtended
	(*FourOctetAsSpecificExtended)(nil),         // 2: apipb.FourOctetAsSpecificExtended
	(*LinkBandwidthExtended)(nil),               // 3: apipb.LinkBandwidthExtended
	(*ValidationExtended)(nil),                  // 4: apipb.ValidationExtended
	(*ColorExtended)(nil),                       // 5: apipb.ColorExtended
	(*EncapExtended)(nil),                       // 6: apipb.EncapExtended
	(*DefaultGatewayExtended)(nil),              // 7: apipb.DefaultGatewayExtended
	(*OpaqueExtended)(nil),                      // 8: apipb.OpaqueExtended
	(*ESILabelExtended)(nil),                    // 9: apipb.ESILabelExtended
	(*ESImportRouteTarget)(nil),                 // 10: apipb.ESImportRouteTarget
	(*MacMobilityExtended)(nil),                 // 11: apipb.MacMobilityExtended
	(*RouterMacExtended)(nil),                   // 12: apipb.RouterMacExtended
	(*TrafficRateExtended)(nil),                 // 13: apipb.TrafficRateExtended
	(*TrafficActionExtended)(nil),               // 14: apipb.TrafficActionExtended
	(*RedirectTwoOctetAsSpecificExtended)(nil),  // 15: apipb.RedirectTwoOctetAsSpecificExtended
	(*RedirectIPv4AddressSpecificExtended)(nil), // 16: apipb.RedirectIPv4AddressSpecificExtended
	(*RedirectFourOctetAsSpecificExtended)(nil), // 17: apipb.RedirectFourOctetAsSpecificExtended
	(*TrafficRemarkExtended)(nil),               // 18: apipb.TrafficRemarkExtended
	(*MUPExtended)(nil),                         // 19: apipb.MUPExtended
	(*VPLSExtended)(nil),                        // 20: apipb.VPLSExtended
	(*UnknownExtended)(nil),                     // 21: apipb.UnknownExtended
	(*ExtendedCommunity)(nil),                   // 22: apipb.ExtendedCommunity
	(*RouteTarget)(nil),                         // 23: apipb.RouteTarget
}
var file_extcom_proto_depIdxs = []int32{
	21, // 0: apipb.ExtendedCommunity.unknown:type_name -> apipb.UnknownExtended
	0,  // 1: apipb.ExtendedCommunity.two_octet_as_specific:type_name -> apipb.TwoOctetAsSpecificExtended
	1,  // 2: apipb.ExtendedCommunity.ipv4_address_specific:type_name -> apipb.IPv4AddressSpecificExtended
	2,  // 3: apipb.ExtendedCommunity.four_octet_as_specific:type_name -> apipb.FourOctetAsSpecificExtended
	3,  // 4: apipb.ExtendedCommunity.link_bandwidth:type_name -> apipb.LinkBandwidthExtended
	4,  // 5: apipb.ExtendedCommunity.validation:type_name -> apipb.ValidationExtended
	5,  // 6: apipb.ExtendedCommunity.color:type_name -> apipb.ColorExtended
	6,  // 7: apipb.ExtendedCommunity.encap:type_name -> apipb.EncapExtended
	7,  // 8: apipb.ExtendedCommunity.default_gateway:type_name -> apipb.DefaultGatewayExtended
	8,  // 9: apipb.ExtendedCommunity.opaque:type_name -> apipb.OpaqueExtended
	9,  // 10: apipb.ExtendedCommunity.esi_label:type_name -> apipb.ESILabelExtended
	10, // 11: apipb.ExtendedCommunity.es_import:type_name -> apipb.ESImportRouteTarget
	11, // 12: apipb.ExtendedCommunity.mac_mobility:type_name -> apipb.MacMobilityExtended
	12, // 13: apipb.ExtendedCommunity.router_mac:type_name -> apipb.RouterMacExtended
	13, // 14: apipb.ExtendedCommunity.traffic_rate:type_name -> apipb.TrafficRateExtended
	14, // 15: apipb.ExtendedCommunity.traffic_action:type_name -> apipb.TrafficActionExtended
	15, // 16: apipb.ExtendedCommunity.redirect_two_octet_as_specific:type_name -> apipb.RedirectTwoOctetAsSpecificExtended
	16, // 17: apipb.ExtendedCommunity.redirect_ipv4_address_specific:type_name -> apipb.RedirectIPv4AddressSpecificExtended
	17, // 18: apipb.ExtendedCommunity.redirect_four_octet_as_specific:type_name -> apipb.RedirectFourOctetAsSpecificExtended
	18, // 19: apipb.ExtendedCommunity.traffic_remark:type_name -> apipb.TrafficRemarkExtended
	19, // 20: apipb.ExtendedCommunity.mup:type_name -> apipb.MUPExtended
	20, // 21: apipb.ExtendedCommunity.vpls:type_name -> apipb.VPLSExtended
	0,  // 22: apipb.RouteTarget.two_octet_as_specific:type_name -> apipb.TwoOctetAsSpecificExtended
	1,  // 23: apipb.RouteTarget.ipv4_address_specific:type_name -> apipb.IPv4AddressSpecificExtended
	2,  // 24: apipb.RouteTarget.four_octet_as_specific:type_name -> apipb.FourOctetAsSpecificExtended
	25, // [25:25] is the sub-list for method output_type
	25, // [25:25] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_extcom_proto_init() }
func file_extcom_proto_init() {
	if File_extcom_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_extcom_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TwoOctetAsSpecificExtended); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extcom_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPv4AddressSpecificExtended); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extcom_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FourOctetAsSpecificExtended); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extcom_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkBandwidthExtended); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extcom_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidationExtended); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extcom_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColorExtended); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extcom_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncapExtended); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extcom_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultGatewayExtended); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extcom_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpaqueExtended); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extcom_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ESILabelExtended); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extcom_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ESImportRouteTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extcom_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MacMobilityExtended); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extcom_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RouterMacExtended); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extcom_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrafficRateExtended); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extcom_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrafficActionExtended); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extcom_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedirectTwoOctetAsSpecificExtended); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extcom_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedirectIPv4AddressSpecificExtended); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extcom_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedirectFourOctetAsSpecificExtended); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extcom_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrafficRemarkExtended); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extcom_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MUPExtended); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extcom_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VPLSExtended); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extcom_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnknownExtended); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extcom_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtendedCommunity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extcom_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RouteTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_extcom_proto_msgTypes[22].OneofWrappers = []interface{}{
		(*ExtendedCommunity_Unknown)(nil),
		(*ExtendedCommunity_TwoOctetAsSpecific)(nil),
		(*ExtendedCommunity_Ipv4AddressSpecific)(nil),
		(*ExtendedCommunity_FourOctetAsSpecific)(nil),
		(*ExtendedCommunity_LinkBandwidth)(nil),
		(*ExtendedCommunity_Validation)(nil),
		(*ExtendedCommunity_Color)(nil),
		(*ExtendedCommunity_Encap)(nil),
		(*ExtendedCommunity_DefaultGateway)(nil),
		(*ExtendedCommunity_Opaque)(nil),
		(*ExtendedCommunity_EsiLabel)(nil),
		(*ExtendedCommunity_EsImport)(nil),
		(*ExtendedCommunity_MacMobility)(nil),
		(*ExtendedCommunity_RouterMac)(nil),
		(*ExtendedCommunity_TrafficRate)(nil),
		(*ExtendedCommunity_TrafficAction)(nil),
		(*ExtendedCommunity_RedirectTwoOctetAsSpecific)(nil),
		(*ExtendedCommunity_RedirectIpv4AddressSpecific)(nil),
		(*ExtendedCommunity_RedirectFourOctetAsSpecific)(nil),
		(*ExtendedCommunity_TrafficRemark)(nil),
		(*ExtendedCommunity_Mup)(nil),
		(*ExtendedCommunity_Vpls)(nil),
	}
	file_extcom_proto_msgTypes[23].OneofWrappers = []interface{}{
		(*RouteTarget_TwoOctetAsSpecific)(nil),
		(*RouteTarget_Ipv4AddressSpecific)(nil),
		(*RouteTarget_FourOctetAsSpecific)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_extcom_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_extcom_proto_goTypes,
		DependencyIndexes: file_extcom_proto_depIdxs,
		MessageInfos:      file_extcom_proto_msgTypes,
	}.Build()
	File_extcom_proto = out.File
	file_extcom_proto_rawDesc = nil
	file_extcom_proto_goTypes = nil
	file_extcom_proto_depIdxs = nil
}
