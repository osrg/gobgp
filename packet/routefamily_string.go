// generated by stringer -type=RouteFamily bgp.go validate.go constant.go; DO NOT EDIT

package bgp

import "fmt"

const (
	_RouteFamily_name_0 = "RF_IPv4_UCRF_IPv4_MC"
	_RouteFamily_name_1 = "RF_IPv4_MPLS"
	_RouteFamily_name_2 = "RF_ENCAP"
	_RouteFamily_name_3 = "RF_IPv4_VPNRF_IPv4_VPN_MC"
	_RouteFamily_name_4 = "RF_RTC_UCRF_FS_IPv4_UCRF_FS_IPv4_VPN"
	_RouteFamily_name_5 = "RF_IPv6_UCRF_IPv6_MC"
	_RouteFamily_name_6 = "RF_IPv6_MPLS"
	_RouteFamily_name_7 = "RF_IPv6_VPNRF_IPv6_VPN_MC"
	_RouteFamily_name_8 = "RF_VPLS"
	_RouteFamily_name_9 = "RF_EVPN"
)

var (
	_RouteFamily_index_0 = [...]uint8{0, 10, 20}
	_RouteFamily_index_1 = [...]uint8{0, 12}
	_RouteFamily_index_2 = [...]uint8{0, 8}
	_RouteFamily_index_3 = [...]uint8{0, 11, 25}
	_RouteFamily_index_4 = [...]uint8{0, 9, 22, 36}
	_RouteFamily_index_5 = [...]uint8{0, 10, 20}
	_RouteFamily_index_6 = [...]uint8{0, 12}
	_RouteFamily_index_7 = [...]uint8{0, 11, 25}
	_RouteFamily_index_8 = [...]uint8{0, 7}
	_RouteFamily_index_9 = [...]uint8{0, 7}
)

func (i RouteFamily) String() string {
	switch {
	case 65537 <= i && i <= 65538:
		i -= 65537
		return _RouteFamily_name_0[_RouteFamily_index_0[i]:_RouteFamily_index_0[i+1]]
	case i == 65540:
		return _RouteFamily_name_1
	case i == 65543:
		return _RouteFamily_name_2
	case 65664 <= i && i <= 65665:
		i -= 65664
		return _RouteFamily_name_3[_RouteFamily_index_3[i]:_RouteFamily_index_3[i+1]]
	case 65668 <= i && i <= 65670:
		i -= 65668
		return _RouteFamily_name_4[_RouteFamily_index_4[i]:_RouteFamily_index_4[i+1]]
	case 131073 <= i && i <= 131074:
		i -= 131073
		return _RouteFamily_name_5[_RouteFamily_index_5[i]:_RouteFamily_index_5[i+1]]
	case i == 131076:
		return _RouteFamily_name_6
	case 131200 <= i && i <= 131201:
		i -= 131200
		return _RouteFamily_name_7[_RouteFamily_index_7[i]:_RouteFamily_index_7[i+1]]
	case i == 1638465:
		return _RouteFamily_name_8
	case i == 1638470:
		return _RouteFamily_name_9
	default:
		return fmt.Sprintf("RouteFamily(%d)", i)
	}
}
